{
  "name": "<% if (repositoryType !== 'none') { -%><%= accountPackagist %><% } else { -%><%= ownerCanonical %><% } -%>/<%= projectName %>",
  "description": "<%= projectDescription %>",
<% if (projectType !== 'library') { -%>
  "type": "<%= projectType %>",
<% } -%>
  "keywords": [<% for (var i = 0; i < projectKeywords.length; i++) { -%>

    "<%= projectKeywords[i] %>"<% if (i < projectKeywords.length - 1) { -%>,<% } -%><% } -%>

  ],
<% if (projectHomepage !== '') { -%>
  "homepage": "<%= projectHomepage %>",
<% }
if (projectLicense !== 'none') { -%>
  "license": "<%= projectLicense %>",
<% } -%>
  "authors": [
    {
      "name": "<%= ownerName %>"<% if (ownerEmail !== '') { -%>,
      "email": "<%= ownerEmail %>"<% } -%><% if (ownerHomepage !== '') { -%>,
      "homepage": "<%= ownerHomepage %>"<% } -%>,
      "role": "Developer"
    }
  ],
<% if (repositoryType !== 'none') { -%>
  "support": {
    "source": "<%= repositoryHomepage %>",
    "issues": "<%= repositoryHomepage %>/issues"
  },
<% } -%>
  "minimum-stability": "dev",
  "prefer-stable": true,
  "require": {
    "php": "^<%= projectPhpVersion.toFixed(1) %>"<% for (var i = 0; i < projectDependencies.length; i++) { -%>,
    "<%= projectDependencies[i][0] %>": "<%= projectDependencies[i][1] %>"<% } -%>

  },
  "require-dev": {
    "brainmaestro/composer-git-hooks": "<%= projectComposerGitHooksVersion %>",
    "friendsofphp/php-cs-fixer": "<%= projectPhpCsFixerVersion %>",
    "infection/infection": "<%= projectInfectionVersion %>"<% if (projectHomesteadVersion !== null) { -%>,
    "laravel/homestead": "<%= projectHomesteadVersion %>"<% } -%>,
    "phpmd/phpmd": "<%= projectPhpmdVersion %>"<% if (projectPhpmetricsVersion !== null) { -%>,
    "phpmetrics/phpmetrics": "<%= projectPhpmetricsVersion %>"<% } -%><% if (projectPhpstanExtensionInstallerVersion !== null) { -%>,
    "phpstan/extension-installer": "<%= projectPhpstanExtensionInstallerVersion %>"<% } -%>,
    "phpstan/phpstan": "<%= projectPhpstanVersion %>"<% if (projectPhpstanDeprecationRulesVersion !== null) { -%>,
    "phpstan/phpstan-deprecation-rules": "<%= projectPhpstanDeprecationRulesVersion %>"<% } -%><% if (projectPhpstanPhpunitVersion !== null) { -%>,
    "phpstan/phpstan-phpunit": "<%= projectPhpstanPhpunitVersion %>"<% } -%>,
    "phpstan/phpstan-strict-rules": "<%= projectPhpstanStrictRulesVersion %>",
    "phpunit/phpunit": "<%= projectPhpunitVersion %>",
    "povils/phpmnd": "<%= projectPhpmndVersion %>",
    "roave/security-advisories": "dev-master",
    "sebastian/phpcpd": "<%= projectPhpcpdVersion %>",
    "squizlabs/php_codesniffer": "<%= projectPhpCodeSnifferVersion %>"<% if (projectTheCodingMachinePhpstanStrictRulesVersion !== null) { -%>,
    "thecodingmachine/phpstan-strict-rules": "<%= projectTheCodingMachinePhpstanStrictRulesVersion %>"<% } -%>

  },
  "suggest": {
  },
  "autoload": {
    "psr-4": {
      "<%= projectNamespace.replace(/\\/g, '\\\\') %>\\": "<%= dirSrc %>/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "<%= projectNamespace.replace(/\\/g, '\\\\') %>\\Tests\\": "<%= dirTestsSrc %>/"
    }
  },
  "bin": [
  ],
  "config": {
    "preferred-install": "dist",
    "sort-packages": true
  },
  "scripts": {
    "cghooks": "cghooks",
    "post-install-cmd": "cghooks add --no-lock",
    "post-update-cmd": "cghooks update",
    "lint-php": "php -l <%= dirSrc %> && php -l <%= dirTests %>",
    "lint-phpcs": "phpcs --standard=PSR2 <%= dirSrc %> <%= dirTests %>",
    "lint-phpcs-fixer": "php-cs-fixer fix --dry-run --verbose",
    "fix-phpcs": "php-cs-fixer fix --verbose",
    "qa-phpcpd": "phpcpd <%= dirSrc %>",
    "qa-phpmd": "phpmd <%= dirSrc %> text unusedcode,naming,design,controversial,codesize",
    "qa-phpmnd": "phpmnd ./ --exclude=<%= dirTests %>",
    "qa-phpstan": "phpstan analyse --level max -c phpstan.neon src",
    "test-phpunit": "phpunit",
    "test-infection": "infection"<% if (projectType === 'project') { -%>,
    "report-phpmetrics": "phpmetrics --report-html=build/metrics --offline ."<% } -%>,
    "report-phpunit-coverage": "phpunit --coverage-html <%= dirBuild %>/coverage",
    "report-phpunit-clover": "phpunit --coverage-clover <%= dirBuild %>/logs/clover.xml",
    "lint": [
      "@lint-php",
      "@lint-phpcs",
      "@lint-phpcs-fixer"
    ],
    "fix": [
      "@fix-phpcs"
    ],
    "qa": [
      "@qa-phpcpd",
      "@qa-phpmd",
      "@qa-phpmnd",
      "@qa-phpstan"
    ],
    "security": "composer outdated",
    "test": [
      "@test-phpunit",
      "@test-infection"
    ],
    "report": [<% if (projectType === 'project') { -%>

      "@report-phpmetrics",<% } -%>

      "@report-phpunit-coverage",
      "@report-phpunit-clover"
    ]
  },
  "extra": {
    "hooks": {
      "pre-commit": "composer lint && composer qa && composer test-phpunit"
    }
  }
}
